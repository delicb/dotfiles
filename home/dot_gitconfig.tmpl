[user]
    name = {{ .git_author_name }}
    email = {{ .git_author_email }}

[core]
    editor = vim
    excludesfile = {{.chezmoi.homeDir}}/.gitignore_global
    pager = "delta --dark"
    ignorecase = true

[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    features = line-numbers decorations
    whitespace-error-style = 22 reverse

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none

[diff]
    colorMoved = default

[push]
    default = simple
    followTags = true
    autoSetupRemote = true

[pull]
    rebase = false

[alias]
    tree = log --graph --decorate --pretty=oneline --abbrev-commit
    s= status --short --branch --ignore-submodules=untracked
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim yellow)- [%an]%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    lg = !"git lg1"
    latest = !"git lg -3"
    last = !"git lg -1"
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    st = status -s
    ci = commit
    co = checkout
    br = branch
    dc = diff --cached
    unstage = reset HEAD --
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
    prune-branches = "!git fetch -p && for branch in `git branch -vv | grep -v $(git branch --show-current) | grep ': gone' | awk '{print $1}'`; do git branch -d $branch; done"
    sw = "!f() { git switch \"$1\" 2> /dev/null || git switch -c \"$1\"; }; f"

[init]
    defaultBranch = main

[remote "origin"]
    prune = true

[merge]
    conflictStyle = zdiff3

{{ if .work -}}
# if in work directory, include work overrides
[includeIf "gitdir:~/work"]
    path = ~/work/gitconfig
{{ end -}}
{{ if .personal -}}
# if in src directory, include personal overrides
[includeIf "gitdir:~/src"]
    path = ~/src/gitconfig
{{ end }}
