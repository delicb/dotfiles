{{- if ( eq .chezmoi.os "darwin" ) -}}
#!/bin/bash

if ! command -v brew &> /dev/null
then
    echo "brew not found, installing..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    # activate brew env in this script
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

{{ $taps := list
    "homebrew/cask"
    "homebrew/core"
    "homebrew/cask-fonts" -}}

{{ $brews := list
    "bat"
    "chezmoi"
    "coreutils"
    "curl"
    "defaultbrowser"
    "eza"
    "fd"
    "fish"
    "git-delta"
    "git-extras"
    "git"
    "jdxcode/tap/mise"
    "jq"
    "kubectl"
    "kubectx"
    "less"
    "libffi"
    "libpq"
    "openssl"
    "pipenv"
    "pipx"
    "pure"
    "ripgrep"
    "starship"
    "vim"
    "watch"
    "wget"
    "xz"
    "zellij"
    "zoxide"
    "zplug" -}}

{{ $casks := list
    "1password-cli"
    "1Password"
    "alfred"
    "bettertouchtool"
    "brave-browser"
    "finicky"
    "firefox"
    "font-hack-nerd-font"
    "font-hasklig"
    "font-inconsolata"
    "font-input"
    "font-jetbrains-mono"
    "google-chrome"
    "iterm2"
    "karabiner-elements"
    "obsidian"
    "scroll-reverser"
-}}

# use brew bundle to install all - generate brewfile on stdin directly in a script
brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range ($taps | sortAlpha | uniq) -}}
tap "{{ . }}"
{{ end -}}
{{ range ($brews | sortAlpha | uniq) -}}
brew "{{ . }}"
{{ end -}}
{{ range ($casks | sortAlpha | uniq) -}}
cask "{{ . }}"
{{ end -}}
EOF

# setup fisher for plugins
#fisher_path=$HOME/.config/fish/plugins fish -c "curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher && fisher update"

# change shell to fish
if ! grep -q "$(brew --prefix)/bin/fish" /etc/shells; then
    echo "Configuring fish as default shell..."
    echo "$(brew --prefix)/bin/fish" | sudo tee -a /etc/shells
    chsh -s "$(brew --prefix)/bin/fish"
    echo "fish shell set as default..."
fi

echo -en "\033[0;32m"  # set text color to green
echo 'Finished installing software.'
echo 'If running for the first time, run chezmoi apply again'
echo 'since some templates depend on existance of 1Password CLI'
echo '(and make sure to run eval $(op signin my) before that)'
echo -en "\033[0m"  # restore color to normal
{{ end -}}
