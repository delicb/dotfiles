## https://github.com/PaulJuliusMartinez/jless
# install jless, it does not provide brew package
{{ $jless_version := "v0.7.1" }}
{{ $jless_package := "" }}
{{- if (eq .chezmoi.os "darwin") }}
{{   $jless_package = (printf "jless-%s-x86_64-apple-darwin.zip" $jless_version) }}
{{- end }}
{{- if (eq .chezmoi.os "linux") }}
{{   $jless_package = (printf "jless-%s-x86_64-unknown-linux-gnu.zip" $jless_version) }}
{{- end }}
{{ $jless_url := (printf "https://github.com/PaulJuliusMartinez/jless/releases/download/%s/%s" $jless_version $jless_package ) }}
{{ with $jless_package }}
["jless"]
type = "archive"
url = "{{ $jless_url }}"
exact = true
# stripComponents = 1
refreshPeriod = "168h"
{{ end }}


{{- if ( eq .chezmoi.os "linux" ) }}
# these do not have package for all distributions, so it is easier to just install them on linux like this

## https://github.com/gsamokovarov/jump
{{ $jump_version := "v0.41.0" }}
{{ $jump_package := "jump_linux_amd64_binary" }}
{{ $jump_url := (printf "https://github.com/gsamokovarov/jump/releases/download/%s/%s" $jump_version $jump_package ) }}
{{ with $jump_package }}
["jump"]
type = "file"
url = "{{ $jump_url }}"
executable = true
# stripComponents = 1
refreshPeriod = "168h"
{{ end }}


# https://github.com/dandavison/delta
{{ $delta_version := "0.12.1"}}
{{ $build := "gnu" }}
{{ if (eq .chezmoi.osRelease.id "alpine") }}
{{   $build = "musl" }}
{{ end }}
{{ $delta_package := (printf "delta-%s-x86_64-unknown-linux-%s.tar.gz" $delta_version $build) }}
{{ $delta_url := (printf "https://github.com/dandavison/delta/releases/download/%s/%s" $delta_version $delta_package) }}
{{ with $jump_package }}
["delta"]
type = "archive"
url = "{{ $delta_url }}"
extract = true
stripComponents = 1
refresh_period = "168h"
{{ end }}

## https://github.com/starship/starship
##
{{ $starship_version := "v1.5.4" }}
{{ $build := "musl" }}
{{ $arch := "x86_64" }}
{{ if (eq .chezmoi.osRelease.id "alpine") }}
{{    $build = "musl" }}
{{ end }}
{{ if (eq .chezmoi.arch "arm64") }}
{{    $arch = "aarch64" }}
{{ end }}
{{ $starship_package := (printf "starship-%s-unknown-linux-%s.tar.gz" $arch $build) -}}
{{ $starship_url := (printf "https://github.com/starship/starship/releases/download/%s/%s" $starship_version $starship_package) -}}
["starship"]
type = "archive"
url = "{{ $starship_url }}"
extract = true
refresh_period = "168h"

## https://github.com/ogham/exa
##
{{ $exa_version := "v0.10.1"}}
{{ $exa_package := (printf "exa-linux-x86_64-musl-%s.zip" $exa_version) }}
{{ $exa_url := (printf "https://github.com/ogham/exa/releases/download/%s/%s" $exa_version $exa_package) }}
["exa"]
type = "archive"
url = "{{ $exa_url }}"
extract = true
stripComponents = 1
refresh_period = "168h"


## https://github.com/BurntSushi/ripgrep
##
{{ $rg_version := "13.0.0"}}
{{ $rg_package := (printf "ripgrep-%s-x86_64-unknown-linux-musl.tar.gz" $rg_version) }}
{{ $rg_url := (printf "https://github.com/BurntSushi/ripgrep/releases/download/%s/%s" $rg_version $rg_package) }}
["rg"]
type = "archive"
url = {{ $rg_url | quote }}
extract = true
stripComponents = 1
refresh_period = "168h"

{{ end }}
